name: Publish to Multi-Registry

on:
  push:
    branches:
      - "main"

env:
  ACR_REGISTRY: crpi-fkl1s7fwluzapj2o.cn-hongkong.personal.cr.aliyuncs.com
  DOCKERHUB_REGISTRY: docker.io
  GHCR_REGISTRY: ghcr.io
  IMAGE_OWNER: ${{ github.repository_owner }}
  IMAGE_NAME: ${{ github.repository }}

jobs:
  docker-multi-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        registry: [acr, dockerhub, ghcr]
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # - name: Install cosign
      #   if: github.event_name != 'pull_request'
      #   uses: sigstore/cosign-installer@59acb6260d9c0ba8f4a2f9d9b48431a222b68e20 #v3.5.0
      #   with:
      #     cosign-release: "v2.2.4"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      - name: Set up Registry Variables
        id: vars
        run: |
          case "${{ matrix.registry }}" in
            acr)
              echo "REGISTRY=${{ env.ACR_REGISTRY }}" >> $GITHUB_ENV
              ;;
            dockerhub)
              echo "REGISTRY=${{ env.DOCKERHUB_REGISTRY }}" >> $GITHUB_ENV
              ;;
            ghcr)
              echo "REGISTRY=${{ env.GHCR_REGISTRY }}" >> $GITHUB_ENV
              ;;
          esac

      - name: Log into registry
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{
            matrix.registry == 'acr' && secrets.ACR_PWD ||
            matrix.registry == 'dockerhub' && secrets.DOCKERHUB_TOKEN ||
            secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          context: ./APP-META/Docker/
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          provenance: ${{ github.event_name != 'pull_request' }}
          sbom: ${{ github.event_name != 'pull_request' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # - name: Cleanup
      #   if: always()
      #   run: |
      #     docker buildx prune -a -f
      #     docker system prune -a -f

      # - name: Sign the published Docker image
      #   if: ${{ github.event_name != 'pull_request' }}
      #   env:
      #     TAGS: ${{ steps.meta.outputs.tags }}
      #     DIGEST: ${{ steps.build-and-push.outputs.digest }}
      #   run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}
